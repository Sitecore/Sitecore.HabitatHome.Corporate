@using Sitecore.Demo.Shared.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Links
@using Sitecore.Mvc
@model Sitecore.HabitatHome.Feature.News.Models.NewsItemsViewModel
@{
    var pageUrl = string.Format("{0}?page=", LinkManager.GetItemUrl(Sitecore.Context.Item));
}
<div class="container">
    <div class="row news-overview">
        @foreach (var news in Model.NewsItems)
        {
            <div class="col-lg-6 mb-4">
                <div class="card h-100 shadow">
                    <a href="@news.NewsUrl">
                        @Html.Sitecore().Edit(news, m => m.NewsImage, new
                        {
                            @class = "card-img-top",
                            mw = 500
                        })
                    </a>
                    <div class="card-body">
                        <h4 class="card-title">
                            <a href="@news.NewsUrl">@Html.Sitecore().Edit(news, m => m.NewsTitle)</a>
                        </h4>
                        <h5 class="date">@Html.Sitecore().Edit(news, m => m.NewsDate, new {format = "MMMM dd, yyyy"})</h5>
                        <p class="card-text">@Html.Sitecore().Edit(news, m => m.NewsSummary)</p>
                    </div>
                </div>
            </div>
        }
    </div>

    @if (!(Model.NumberOfPages <= 1))
    {
        <ul class="pagination justify-content-center">
            @for (var i = 1; i < Model.NumberOfPages + 1; i++)
            {
                var url = pageUrl + i;
                <li class="page-item">
                    <a class="page-link" href="@url">@i</a>
                </li>
            }
        </ul>
    }
</div>